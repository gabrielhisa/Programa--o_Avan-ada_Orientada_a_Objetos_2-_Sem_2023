spring.jpa.hibernate.dll-auto=update
spring.datasource.url=jdbc:mysql://localhost/dbblog?createDatabaseIfNotExist=true&serverTimezone=UTC&useSSl=false
spring.datasource.username=root
spring.datasource.password=root
server.port=8080
spring.jpa.show-sql=true











# Questoes
# Pq uma interface pra lidar com cada uma das classes, IoC?
# Dentro de um projeto, quais os pacotes basicos q se devem criar e pq para conexao com DB eh necessario extender interfaces?



# 02-09-23
# Em sala, criação de interface puxando JPA para tods as classes
# Fazer o mesmo pra tema, usuario e usuariologin
# Prof colocou os arquivos na past no teams, a partir da model
# Exercício em sala tem o nome de com.fatec.blogPessoal
# Model cria as tabelas
# Repositorio cria a conexão com o banco de dados/JPA
# Control agora vai criar as regras pra realizar o CRUD (methods para fazer os acessos (gets, posts, puts, deletes)
# Criação do primeiro controller, setando a injeção de dependencia da REST API, o endpoint e as regras de permissão de acesso
# Também deixou a instanciação da interface nas mãos do framwork através da injeção de dependência com @Autowired e um novo método para pegar todas as postagens
# Fluxo de criação até agora: classes + tabelas >  Interfaces > Controllers